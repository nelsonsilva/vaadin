<?xml version="1.0"?>

<project name="Testing Testing Tools" basedir="." default="run-and-clean-up">
    <!-- ================================================================== -->
    <!-- Configuration                                                      -->
    <!-- ================================================================== -->
	<property name="lib.dir" value="../build/lib/testbench" />
	<!-- Temporary output directory, created and removed by this script -->
	<property name="test-output-dir" value="../build/test-output" />
	<property name="class-dir" value="${test-output-dir}/classes" />
	<!-- Browsers to use for testing -->
	<property name="test-browsers" value="firefox" />

	<!-- Host running Selenium RC -->
	<property name="com.vaadin.testbench.tester.host" value="192.168.56.101" />
	<!-- Base url where the testable application is deployed -->
	<property name="com.vaadin.testbench.deployment.url" value="http://192.168.56.1:8080/" />
	<property name="com.vaadin.testbench.tester.reference" value="../build/screens/" />
	
	<!-- classpath must include test bench jar and its dependencies -->
	<path id="classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<!-- fileset containing all tests to run -->
	<fileset dir="../src/com/vaadin/tests" id="html-test-files">
		<include name="**/**.html" />
	</fileset>

	<!-- This target converts HTML tests files to java junit tests. One test file for each browser is created. -->
	<target name="create-tests">
		<fileset id="tests">
			<include />
		</fileset>
		<pathconvert pathsep=" " property="testfiles" refid="html-test-files" />

		<java classname="com.vaadin.testbench.util.TestConverter" classpathref="classpath">
			<arg value="${test-output-dir}" />
			<arg value="${test-browsers}" />
			<arg line="${testfiles}" />
		</java>
	</target>

	<!-- This target complies the generated java junit tests. -->
	<target name="compile-tests" depends="create-tests">
		<mkdir dir="${class-dir}" />
		<javac srcdir="${test-output-dir}" destdir="${class-dir}" debug="on">
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javac>
	</target>


    <!-- ================================================================== -->
    <!-- Toolkit Server Management                                          -->
    <!-- ================================================================== -->

    <target name="server-start">
        <fail unless="package.name" message="The 'package.name' property must be defined."/>
        <fail unless="package.filename" message="The 'package.filename' property must be defined."/>
        <fail unless="testing.testarea" message="The 'testing.testarea' property must be defined."/>

        <echo>Package name: ${package.name}</echo>
        <echo>Package filename: ${package.filename}</echo>
        <echo>Testing area: ${testing.testarea}</echo>

        <exec executable="python" searchpath="true" dir=".."  resultproperty="server.start.result">
            <arg value="build/testing/toolkit-server.py"/>
            <arg value="start"/>
            <arg value="${package.name}"/>
            <arg value="${package.filename}"/>
            <arg value="${output-dir}"/>
            <arg value="${testing.testarea}"/>
        </exec>

        <condition property="server.start.succeeded">
            <equals arg1="${server.start.result}" arg2="0"/>
        </condition>
    </target>

    <target name="server-stop">
        <exec executable="python" dir=".." searchpath="true" resultproperty="server.stop.result">
            <arg value="build/testing/toolkit-server.py"/>
            <arg value="stop"/>
        </exec>
    </target>
	
    <!-- ================================================================== -->
    <!-- Running Tests                                                      -->
    <!-- ================================================================== -->
	
	<target name="check-parameters">
        <fail unless="output-dir" message="The 'output-dir' (usually build/result/vaadin-xxx) should be given to test script."/>
        <fail unless="com.vaadin.testbench.tester.host" message="The 'com.vaadin.testbench.tester.host' property must be defined."/>
        <fail unless="com.vaadin.testbench.deployment.url" message="The 'com.vaadin.testbench.deployment.url' property must be defined."/>
    </target>
		
	<!-- This target runs the generated and compiled junit tests -->
	<target name="run-tests" depends="compile-tests,remove-error-screens">
		<junit fork="yes" printsummary="withOutAndErr">
			<classpath>
				<path refid="classpath" />
				<pathelement path="${class-dir}" />
			</classpath>

			<jvmarg value="-Dcom.vaadin.testbench.tester.host=${com.vaadin.testbench.tester.host}" />
			<jvmarg value="-Dcom.vaadin.testbench.deployment.url=${com.vaadin.testbench.deployment.url}" />
			<!-- Define where the reference screenshots and diff files are saved -->
			<jvmarg value="-Dcom.vaadin.testbench.screenshot.directory=${com.vaadin.testbench.screenshot.directory}" />
			<jvmarg value="-Djava.awt.headless=true" />

			<!-- true/false system arguments -->
			<jvmarg value="-Dcom.vaadin.testbench.screenshot.reference.error_if_missing=${com.vaadin.testbench.screenshot.reference.error_if_missing}" />
			<jvmarg value="-Dcom.vaadin.testbench.tester.reference.debug=${com.vaadin.testbench.tester.debug}" />

			<batchtest>
				<fileset dir="${test-output-dir}">
					<include name="**/**.java" />
				</fileset>
			</batchtest>
		</junit>

	</target>

	<!-- Remove temporary source and compiled java files -->
	<target name="remove-temp-files">
		<delete>
			<fileset dir="${test-output-dir}">
				<include name="**/**.java" />
			</fileset>
		</delete>
	</target>
	
	<!-- Remove old error screenshots -->
	<target name="remove-error-screens">
		<mkdir dir="${com.vaadin.testbench.screenshot.directory}/errors" />
		<delete>
			<fileset dir="${com.vaadin.testbench.screenshot.directory}/errors">
				<include name="**/**.*" />	
			</fileset>
		</delete>
	</target>

    <!-- ================================================================== -->
    <!-- Main Targets                                                       -->
    <!-- ================================================================== -->

    <!-- The default target. -->
	<target name="run-and-clean-up" depends="check-parameters, run-tests,remove-temp-files">
	</target>

    <!-- Also starts the server. -->
    <target name="test-package" depends="server-start, run-and-clean-up, server-stop">
    </target>
	
</project>
