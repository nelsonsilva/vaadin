/* *************************************************************************
 
   								Millstone(TM) 
   				   Open Sourced User Interface Library for
   		 		       Internet Development with Java

             Millstone is a registered trademark of IT Mill Ltd
                  Copyright (C) 2000-2005 IT Mill Ltd
                     
   *************************************************************************

   This library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   license version 2.1 as published by the Free Software Foundation.

   This library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

   *************************************************************************
   
   For more information, contact:
   
   IT Mill Ltd                           phone: +358 2 4802 7180
   Ruukinkatu 2-4                        fax:  +358 2 4802 7181
   20540, Turku                          email: info@itmill.com
   Finland                               company www: www.itmill.com
   
   Primary source for MillStone information and releases: www.millstone.org

   ********************************************************************** */

package com.enably.tk.terminal;

import java.io.PrintWriter;
import java.io.StringWriter;

/** System error is a runtime exception caused by error in system. The system
 * error can be shown to the user as it implements ErrorMessage interface,
 * but contains technical information such as stack trace and exception.
 *
 * @author IT Mill Ltd.
 * @version @VERSION@
 * @since 3.0
 */
public class SystemError extends RuntimeException implements ErrorMessage {

	/**
     * Serial generated by eclipse.
     */
    private static final long serialVersionUID = 3256445789512675891L;
    
    /** The cause of the system error. The cause is stored separately as 
	 * JDK 1.3 does not support causes natively */
	private Throwable cause = null;

	/** Constructor for SystemError with error message specified.
	 * @param message Textual error description.
	 */
	public SystemError(String message) {
		super(message);
	}

	/** Constructor for SystemError with causing exception and error message.
	 * @param message Textual error description.
	 * @param cause The throwable causing the system error.
	 */
	public SystemError(String message, Throwable cause) {
		super(message);
		this.cause = cause;
	}

	/** Constructor for SystemError with cause.
	 * @param cause The throwable causing the system error.
	 */
	public SystemError(Throwable cause) {
		this.cause = cause;
	}

	public final int getErrorLevel() {
		return ErrorMessage.SYSTEMERROR;
	}

	public void paint(PaintTarget target) throws PaintException {

		target.startTag("error");
		target.addAttribute("level", "system");

		// Paint the error message
		String message = getLocalizedMessage();
		if (message != null) {
			target.addSection("b", message);
		}

		// Paint the exception
		if (cause != null) {
			if (message != null) 
				target.addUIDL("<br/><br/>");
			target.addSection("b", "Exception");
			target.addUIDL("<br/><br/>");
			StringWriter buffer = new StringWriter();
			cause.printStackTrace(new PrintWriter(buffer));
			target.addSection("pre", buffer.toString());
		}

		target.endTag("error");

	}

	/** Get cause for the error */
	public Throwable getCause() {
		return cause;
	}

	/* Documented in super interface */
	public void addListener(RepaintRequestListener listener) {
	}

	/* Documented in super interface */
	public void removeListener(RepaintRequestListener listener) {
	}

	/* Documented in super interface */
	public void requestRepaint() {
	}

	/* Documented in super interface */
	public void requestRepaintRequests() {
	}

}
