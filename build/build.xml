<?xml version="1.0"?>

<project name="Enably" basedir="../" default="all">

	<!-- Default build target -->
	<target name="all" depends="package" description="Build all">
	</target>

	<!-- Initialization - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="init">

		<property file="build/VERSION" />
		<property name="product-file" value="enably-toolkit" />
		<property name="product-name" value="Enably Toolkit" />
		<property name="toolkit-package" value="com/enably/tk" />

		<!-- Destination files -->
		<property name="package-file-name" value="${product-file}-${version}.zip" />
		<property name="lib-bin-jar-name" value="${product-file}-${version}.jar" />
		<property name="lib-src-jar-name" value="${product-file}-src-${version}.jar" />
		<property name="web-themes-jar-name" value="${product-file}-themes-${version}.jar" />
		<property name="demo-war-name" value="${product-file}-demo-${version}.war" />

		<echo message="Prepared to build ${product-file} version ${version} packages" />

		<!-- Output directory -->
		<property name="output-dir" value="build/result/${product-file}-${version}" />
		<mkdir dir="${output-dir}" />


		<!-- Copy/filter core documentation to correct places -->
		<!-- Disabled 
    	<copy todir="${output-dir}">
	    	<filterset>
    	       <filter token="VERSION" value="${version}"/>
        	</filterset>
            <fileset dir="${release-docs}">
                <include name="readme.txt"/>
                <include name="install.txt"/>
                <include name="license.txt"/>
                <include name="release-notes.txt"/>
                <include name="changes.txt"/>
            </fileset>
        </copy>
        -->

		<!-- Create Output Directory Hierarchy -->
		<mkdir dir="${output-dir}/doc/manual" />
		<mkdir dir="${output-dir}/doc/api" />
		<mkdir dir="${output-dir}/lib" />
		<mkdir dir="${output-dir}/demo" />

	</target>

	<!-- Themes - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="themes" depends="init">
		<!-- TODO Create theme-jars and copy AJAX theme -->
		<copy todir="${output-dir}/lib/web-themes">
			<fileset dir="WebContent/WEB-INF/lib/themes">
				<exclude name="**/.svn" />
			</fileset>
		</copy>
		<copy todir="${output-dir}/lib/ajax-themes">
			<fileset dir="WebContent">
				<exclude name="**/.svn" />
				<include name="themes/**" />
			</fileset>
			<fileset dir="WebContent">
				<exclude name="**/.svn" />
				<include name="client/**" />
			</fileset>
		</copy>
	</target>

	<!-- Libs - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="compile-java" depends="init">
		<!-- Compile -->
		<mkdir dir="build/result/classes" />
		<javac srcdir="src" destdir="build/result/classes" classpath="build/lib/servlet-api.jar" includes="${toolkit-package}/**" />
	</target>

	<target name="libs" depends="compile-java">

		<!-- Create binary JAR -->
		<jar jarfile="${output-dir}/lib/${lib-bin-jar-name}" compress="true" includes="${toolkit-package}/**" basedir="build/result/classes" excludes="${toolkit-package}/demo/**" />

		<!-- Create source JAR -->
		<jar jarfile="${output-dir}/lib/${lib-src-jar-name}" compress="true">
			<fileset dir="src">
				<patternset>
					<include name="${toolkit-package}/**/*.java" />
					<exclude name="${toolkit-package}/demo/**/*.java" />
				</patternset>
			</fileset>
		</jar>
	</target>

	<!-- Demo  - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="demo" depends="libs,compile-java">

		<war warfile="${output-dir}/demo/${product-file}.war" webxml="WebContent/WEB-INF/web.xml">
			<classes dir="build/result/classes">
				<include name="${toolkit-package}/demo/**/*.class" />
				<include name="src/${package-file-name}/demo/**/*.jpg" />
				<include name="src/${package-file-name}/demo/**/*.png" />
				<include name="src/${package-file-name}/demo/**/*.gif" />
			</classes>
			<lib dir="${output-dir}/lib">
				<include name="${lib-bin-jar-name}" />
			</lib>
			<fileset dir="">
				<include name="src/${toolkit-package}/demo/**/*.java" />
			</fileset>
			<fileset dir="WebContent">
				<include name="**" />
				<exclude name="WEB-INF/web.xml" />
			</fileset>
		</war>

		<copy todir="${output-dir}/demo">
			<fileset dir="build/demo">
				<exclude name="**/.svn" />
			</fileset>
		</copy>

		<copy todir="${output-dir}/demo/src">
			<fileset dir="src">
				<include name="${toolkit-package}/demo/**/*.java" />
			</fileset>
		</copy>
	</target>

	<!-- Documentation- - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="docs" depends="javadoc,manual-pdf,manual-html,package-docs">
	</target>

	<target name="package-docs" depends="init">
		<copy todir="${output-dir}">
			<filterchain>
				<expandproperties />
			</filterchain>
			<fileset dir="">
				<include name="*.html" />
				<include name="*.txt" />
			</fileset>
		</copy>
		<copy todir="${output-dir}/doc/manual/html-style">
			<fileset dir="doc/manual/html-style">
				<exclude name="**/.svn" />
				<exclude name="**/test.html" />
			</fileset>
		</copy>
		<copy todir="${output-dir}/doc">
			<fileset dir="doc">
				<include name="dtd/**/*.dtd" />
			</fileset>
		</copy>
	</target>

	<target name="javadoc" depends="init">
		<javadoc destdir="${output-dir}/doc/api" author="true" version="true" use="true" windowtitle="${product-name}" classpath="build/lib/servlet-api.jar">
			<packageset dir="src">
				<include name="${toolkit-package}/**" />
				<exclude name="${toolkit-package}/demo/**" />
			</packageset>
			<doctitle>
				<![CDATA[<h1>Enably Toolkit</h1>]]></doctitle>
		<!--			<header><![CDATA[<script type="text/javascript" src=".html-style/style.js"></script>]]></header> -->
		<bottom>
			<![CDATA[<i>Copyright &#169; 2000-2006 IT Mill Ltd. All Rights Reserved.</i>]]></bottom>
	<link offline="true" href="http://java.sun.com/j2se/1.5.0/docs/api/" packagelistLoc="build/javadoc/j2se-1.5.0" />
	<link offline="true" href="http://java.sun.com/j2ee/1.4/docs/api/" packagelistLoc="build/javadoc/j2ee-1.4" />
</javadoc>
</target>

<target name="book-part2" depends="dbdoclet">
<!-- TODO Add XSLT to transform dbdoclet results to book part 2 -->
</target>

<target name="dbdoclet" depends="init">
<javadoc access="public" charset="UTF-8" docencoding="UTF-8" encoding="ISO-8859-15" failonerror="yes" classpath="build/lib/servlet-api.jar" maxmemory="512m" source="1.5">
	<packageset dir="src">
		<include name="${toolkit-package}/**" />
		<exclude name="${toolkit-package}/demo/**" />
	</packageset>
	<doclet name="org.dbdoclet.doclet.docbook.DocBookDoclet" path="build/lib/jdk${java.specification.version}/dbdoclet.jar">
		<param name="-d" value="result/docbook" />
	</doclet>
</javadoc>
</target>

<target name="manual-pdf" depends="init">
<!-- TODO Include XEP-based FO building in future -->
</target>

<target name="manual-html" depends="init">
<path id="docbook-xsl.classpath">
	<pathelement path="build/lib/fop-0.92/serializer-2.7.0.jar" />
	<pathelement path="build/lib/fop-0.92/xalan-2.7.0.jar" />
	<pathelement path="build/lib/fop-0.92/xercesImpl-2.7.1.jar" />
	<pathelement path="build/lib/fop-0.92/xml-apis-1.3.02.jar" />
</path>
<java classname="org.apache.xalan.xslt.Process" failonerror="yes" fork="yes" maxmemory="764m">
	<arg value="-in" />
	<arg value="doc/manual/book.xml" />
	<arg value="-xsl" />
	<arg value="build/docbook/conf/custom-html-docbook.xsl" />
	<arg value="-out" />
	<arg value="${output-dir}/doc/manual/index.html" />
	<arg value="-param" />
	<arg value="use.extensions" />
	<arg value="1" />
	<classpath refid="docbook-xsl.classpath" />
</java>
</target>

<!-- ZIP Package creation - - - - - - - - - - - - - - - - - - - - - - - - - -->

<target name="package" depends="clean-all,libs,demo,docs,themes">
<zip zipfile="build/result/${package-file-name}">
	<fileset dir="build/result">
		<patternset>
			<include name="${product-file}-${version}/**" />
		</patternset>
	</fileset>
</zip>
</target>

<!-- Clean results - - - - - - - - - - - - - - - - - - - - - - - - - -->
<target name="clean-all" depends="">
<delete dir="build/result" />
</target>


</project>
