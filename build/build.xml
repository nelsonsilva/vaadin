<?xml version="1.0"?>

<project name="Enably" basedir="../" default="all">

	<!-- Default build target -->
	<target name="all" depends="package" description="Build all">
	</target>

	<!-- Initialization - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="init">

		<!-- TODO: Version should be read from a file -->
		<property name="version" value="4.0-alpha-1" />
		<property name="product" value="enably-toolkit" />

		<!-- Destination files -->
		<property name="package-file-name" value="${product}-${version}.zip" />
		<property name="lib-bin-jar-name" value="${product}-${version}.jar" />
		<property name="lib-src-jar-name" value="${product}-src-${version}.jar" />
		<property name="web-themes-jar-name" value="${product}-themes-${version}.jar" />
		<property name="demo-war-name" value="${product}-demo-${version}.war" />

		<echo message="Prepared to build ${product} version ${version} packages" />

		<!-- Output directory -->
		<property name="output-dir" value="build/result/${product}-${version}" />
		<mkdir dir="${output-dir}" />


		<!-- Copy/filter core documentation to correct places -->
		<!-- Disabled 
    	<copy todir="${output-dir}">
	    	<filterset>
    	       <filter token="VERSION" value="${version}"/>
        	</filterset>
            <fileset dir="${release-docs}">
                <include name="readme.txt"/>
                <include name="install.txt"/>
                <include name="license.txt"/>
                <include name="release-notes.txt"/>
                <include name="changes.txt"/>
            </fileset>
        </copy>
        -->

		<!-- Convert to CRLF -->
		<fixcrlf srcdir="${output-dir}" eol="crlf" tablength="4" tab="remove" includes="*.txt" />

		<!-- Create Output Directory Hierarchy -->
		<mkdir dir="${output-dir}/doc/manual" />
		<mkdir dir="${output-dir}/doc/api" />
		<mkdir dir="${output-dir}/lib" />
		<mkdir dir="${output-dir}/demo" />

	</target>


	<!-- Target for generation manifest file
  			parameters: name,title -->
	<!--
    <target name="generate-manifest">
		<manifest file="${manifest-dir}/${file}">
    		<attribute name="Built-By" value="${user.name}"/>
    		<section name="${name}">
      		<attribute name="Specification-Title" value="${spec-title}"/>
      		<attribute name="Specification-Version" value="${version}"/>
      		<attribute name="Specification-Vendor" value="IT Mill Ltd"/>
      		<attribute name="Implementation-Title" value="${impl-title}"/>
      		<attribute name="Implementation-Version" value="${version}"/> 
      		<attribute name="Implementation-Vendor" value="IT Mill Ltd"/>
    		</section>
		</manifest>
    </target>
	-->


	<!-- Base - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="lib" depends="init">
	</target>

	<!-- Documentation- - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="docs" depends="javadoc,manual-pdf,manual-html">
	</target>

	<target name="javadoc" depends="init">
		 <javadoc
		           destdir="${output-dir}/doc/api"
		           author="true"
		           version="true"
		           use="true"
		           windowtitle="IT Mill Toolkit API">
			<packageset dir="src">
				<include name="com/itmill/tk/**" />
				<exclude name="com/itmill/tk/demo/**" />
			</packageset>
		    <doctitle><![CDATA[<h1>IT Mill Toolkit</h1>]]></doctitle>
		   	<bottom><![CDATA[<i>Copyright &#169; 2000-2006 IT Mill Ltd. All Rights Reserved.</i>]]></bottom>
		    <link offline="true" href="http://java.sun.com/j2se/1.5.0/docs/api/" packagelistLoc="/tmp/"/>
		    <link offline="true" href="http://java.sun.com/j2ee/1.4/docs/api/" packagelistLoc="/tmp/"/>
		  </javadoc>
	</target>

	<target name="book-part2" depends="dbdoclet">

	</target>

	<target name="dbdoclet" depends="init">
		<javadoc access="public" charset="UTF-8" docencoding="UTF-8" encoding="ISO-8859-15" failonerror="yes" classpath="build/lib/servlet-api.jar" maxmemory="512m" source="1.5">
			<packageset dir="src">
				<include name="com/itmill/tk/**" />
				<exclude name="com/itmill/tk/demo/**" />
			</packageset>
			<doclet name="org.dbdoclet.doclet.docbook.DocBookDoclet" path="build/lib/jdk${java.specification.version}/dbdoclet.jar">
				<param name="-d" value="result/docbook" />
			</doclet>
		</javadoc>
	</target>

	<target name="manual-pdf" depends="init,book-part2">
	</target>

	<target name="manual-html" depends="init,book-part2">
		<path id="docbook-xsl.classpath">
			<pathelement path="build/lib/fop-0.92/serializer-2.7.0.jar" />
			<pathelement path="build/lib/fop-0.92/xalan-2.7.0.jar" />
			<pathelement path="build/lib/fop-0.92/xercesImpl-2.7.1.jar" />
			<pathelement path="build/lib/fop-0.92/xml-apis-1.3.02.jar" />
		</path>
		<java classname="org.apache.xalan.xslt.Process" failonerror="yes" fork="yes" maxmemory="764m">
			<arg value="-in" />
			<arg value="doc/manual/book.xml" />
			<arg value="-xsl" />
			<arg value="build/docbook/xsl/html/chunk.xsl" />
			<arg value="-out" />
			<arg value="${output-dir}/doc/manual/index.html" />
			<arg value="-param" />
			<arg value="use.extensions" />
			<arg value="1" />
			<classpath refid="docbook-xsl.classpath" />
		</java>
	</target>

	<!-- Examples - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="demo" depends="init,lib">
	</target>


	<!-- ZIP Package creation - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="package" depends="init,docs,lib,demo">
		<zip zipfile="build/${package-file-name}">
			<fileset dir="build">
				<patternset>
					<include name="${product}-${version}/**" />
				</patternset>
			</fileset>
		</zip>
	</target>


</project>
